{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, isDevMode } from '@angular/core';\n// NGrx\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { counterReducer } from './contador/contador.reducer';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HijoComponent } from './contador/hijo/hijo.component';\nimport { NietoComponent } from './contador/nieto/nieto.component';\nlet AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  declarations: [AppComponent, HijoComponent, NietoComponent],\n  imports: [BrowserModule, AppRoutingModule, StoreModule.forRoot({\n    contador: counterReducer\n  }), StoreDevtoolsModule.instrument({\n    maxAge: 25,\n    // Retains last 25 states\n    logOnly: !isDevMode(),\n    // Restrict extension to log-only mode\n    autoPause: true,\n    // Pauses recording actions and state changes when the extension window is not open\n    trace: false,\n    //  If set to true, will include stack trace for every dispatched action, so you can see it in trace tab jumping directly to that part of code\n    traceLimit: 75,\n    // maximum stack trace frames to be stored (in case trace option was provided as true)\n    connectInZone: true // If set to true, the connection is established within the Angular zone\n  })],\n  providers: [],\n  bootstrap: [AppComponent]\n})], AppModule);\nexport { AppModule };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}